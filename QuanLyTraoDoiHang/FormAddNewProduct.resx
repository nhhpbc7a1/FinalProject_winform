<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picboxProduct.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>